CREATE TABLE VEHICLES (
  `ID` bigint NOT NULL AUTO_INCREMENT,
  `PLACA` varchar(100) DEFAULT NULL,
  `OWNER_ID` bigint DEFAULT NULL,
  `BRAND` varchar(100) DEFAULT NULL,
  `COLOR` varchar(100) DEFAULT NULL,
  `MODEL` varchar(100) DEFAULT NULL,
  `TYPE_VEHICLE` bigint DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ;

CREATE TABLE USERS (
	ID BIGINT auto_increment NOT NULL,
	EMAIL varchar(100) NULL,
	NAME varchar(100) NULL,
	SURNAME varchar(100) NULL,
	PHONE BIGINT NULL,
	`ROLE` BIGINT NULL,
	CONSTRAINT USERS_pk PRIMARY KEY (ID)
);

CREATE TABLE ROLES (
	ID BIGINT auto_increment NOT NULL,
	NAME varchar(100) NULL,
	CONSTRAINT ROLES_pk PRIMARY KEY (ID)
);

CREATE TABLE SERVICES (
	ID BIGINT auto_increment NOT NULL,
	WORKER_ID BIGINT NULL,
	SERVICE BIGINT NULL,
	CREATION_DATE DATETIME NULL,
	STATUS varchar(100) NULL,
	VEHICLE BIGINT NULL,
	CONSTRAINT SERVICES_pk PRIMARY KEY (ID)
);

-- dbexcalibur.cat_brand_vehicle definition

CREATE TABLE `CAT_MODEL_VEHICLE` (
  `ID` bigint NOT NULL AUTO_INCREMENT,
  `ID_BRAND` bigint DEFAULT NULL,
  `NAME` varchar(100) DEFAULT NULL,
  `SLUG` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ;

CREATE TABLE CAT_BRAND_VEHICLE (
	ID BIGINT auto_increment NOT NULL,
	NAME varchar(100) NULL,
	SLUG varchar(100) NULL,
	CONSTRAINT CAT_BRAND_VEHICLE_pk PRIMARY KEY (ID)
);

CREATE TABLE CAT_TYPE_VEHICLE (
	ID BIGINT auto_increment NOT NULL,
	NAME varchar(100) NULL,
	CONSTRAINT CAT_TYPE_VEHICLE_pk PRIMARY KEY (ID)
);

CREATE TABLE CAT_SERVICES (
  ID bigint NOT NULL,
  NAME varchar(100) DEFAULT NULL,
  DESCRIPTION varchar(100) DEFAULT NULL,
  PRICE varchar(100) DEFAULT NULL,
  TYPE_VEHICLE varchar(100) DEFAULT NULL,
  CONSTRAINT CAT_SERVICES_pk PRIMARY KEY (ID)
);

CREATE PROCEDURE SpGetActiveServices()
begin
	select 
		u.NAME as NAME_WORKER, 
		v.PLACA as PLACA,
		v.BRAND as BRAND,
		uo.NAME as NAME_OWNER,
		uo.SURNAME as SURNAME_OWNER,
		uo.PHONE as PHONE_OWNER,
		cs.NAME as NAME_SERVICE,
		cs.PRICE as PRICE_SERVICE
	from services s
	left join vehicles v on s.VEHICLE = v.ID
	left join users u on s.WORKER_ID = u.ID
	left join users uo on v.OWNER_ID = uo.ID
	left join cat_services cs on s.SERVICE = cs.ID
	where status = "ACTIVE";
END;

CREATE PROCEDURE SpGetActiveServices()
begin
	select 
		s.ID as ID,
		u.NAME as NAME_WORKER, 
		v.PLACA as PLACA,
		v.BRAND as BRAND,
		uo.NAME as NAME_OWNER,
		uo.SURNAME as SURNAME_OWNER,
		uo.PHONE as PHONE_OWNER,
		cs.NAME as NAME_SERVICE,
		cs.PRICE as PRICE_SERVICE
	from services s
	left join vehicles v on s.VEHICLE = v.ID
	left join users u on s.WORKER_ID = u.ID
	left join users uo on v.OWNER_ID = uo.ID
	left join cat_services cs on s.SERVICE = cs.ID
	where status = "ACTIVE";
END

CREATE PROCEDURE SpGetModelsByBrand(IN brandId bigint)
BEGIN
    SELECT * 
    FROM CAT_MODEL_VEHICLE model 
    WHERE model.ID_BRAND = brandId;
END 



ALTER TABLE SERVICES  ADD CONSTRAINT services_vehicles_FK FOREIGN KEY (VEHICLE) REFERENCES VEHICLES(ID);
ALTER TABLE SERVICES ADD CONSTRAINT services_users_FK FOREIGN KEY (WORKER_ID) REFERENCES USERS(ID);
ALTER TABLE SERVICES ADD CONSTRAINT services_cat_services_FK FOREIGN KEY (SERVICE) REFERENCES CAT_SERVICES(ID);

ALTER TABLE USERS ADD CONSTRAINT users_roles_FK FOREIGN KEY (`ROLE`) REFERENCES ROLES(ID);
ALTER TABLE VEHICLES ADD CONSTRAINT vehicles_cat_type_vehicle_FK FOREIGN KEY (TYPE_VEHICLE) REFERENCES CAT_TYPE_VEHICLE(ID);
